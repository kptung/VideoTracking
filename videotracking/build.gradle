import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
    }

    packagingOptions {
        exclude 'lib/armeabi/libopencv_java3.so'
        exclude 'lib/armeabi-v7a/libopencv_java3.so'
        exclude 'lib/mips/libopencv_java3.so'
        exclude 'lib/x86/libopencv_java3.so'
    }

    // Build OpenCV NDK
    sourceSets.main {
        jni.srcDirs = [] //disable automatic ndk-build call
        //jni.srcDirs = ['src/main/jni']
    }


    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        def rootDir = project.rootDir
        def localProperties = new File(rootDir, "local.properties")
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def ndkDir = properties.getProperty('ndk.dir')
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir\\ndk-build.cmd",
                    'NDK_PROJECT_PATH=build/intermediates/ndk',
                    'NDK_LIBS_OUT=src/main/jniLibs',
                    'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                    'NDK_APPLICATION_MK=src/main/jni/Application.mk'
        } else {
            commandLine "$ndkDir/ndk-build",
                    'NDK_PROJECT_PATH=build/intermediates/ndk',
                    'NDK_LIBS_OUT=src/main/jniLibs',
                    'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                    'NDK_APPLICATION_MK=src/main/jni/Application.mk'
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    task ndkClean(type: Exec, description: 'Clean NDK Binaries') {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir/ndk-build.cmd",
                    'clean',
                    '-C',
                    file('src/main/jni').absolutePath
        } else {
            commandLine "$ndkDir/ndk-build",
                    'clean',
                    '-C',
                    file('src/main/jni').absolutePath
        }
    }

    clean.dependsOn 'ndkClean'
    //end

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
            dirs project(':trackingInterface').file('libs')
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile project(':trackingInterface')
    compile(name: 'lib-opencv-3.2.0-release', ext: 'aar')
}
